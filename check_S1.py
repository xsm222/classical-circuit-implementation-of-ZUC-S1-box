for i in range(256):
    x = list(map(int, bin(i)[2:].rjust(8, '0')))  # x3存储在x[0]，即x3 x2 x1 x0存储在x[0-3]上
    # print(x)
    x = x[::-1]  # 逆序
    # print(x)

    t = [0] * 104
    y = [0] * 22
    z = [0] * 18
    s = [0] * 8

    #U矩阵
    y[12] = x[5]
    y[14] = x[1]
    y[21] = x[2] ^ x[4]
    y[10] = y[21] ^ x[1]
    t[0] = x[5] ^ x[6]
    t[1] = y[10] ^ x[3]
    y[2] = t[1] ^ x[6]
    t[2] = t[0] ^ x[7]
    y[5] = t[2] ^ x[3]
    t[3] = x[0] ^ x[3]
    y[1] = y[2] ^ x[0]
    t[4] = t[2] ^ y[10]
    t[5] = t[4] ^ x[0]
    y[13] = t[3] ^ x[1]
    y[20] = y[2] ^ x[7]
    t[6] = t[5] ^ x[7]
    y[11] = t[6] ^ y[21]
    y[9] = t[5] ^ x[2]
    y[3] = y[9] ^ y[1]
    y[19] = t[1] ^ x[5]
    y[18] = t[4] ^ x[2]
    y[16] = y[5] ^ x[1]
    y[15] = y[1] ^ x[1]
    y[0] = t[6] ^ x[1]
    y[4] = y[10] ^ x[5]
    y[8] = y[13] ^ x[5]
    y[6] = y[5] ^ x[7]
    y[17] = t[3] ^ x[4]
    y[7] = x[2] ^ x[6]

    #F非线性函数
    t[7] = y[13] & y[17]
    t[8] = y[8] & y[9]
    t[9] = y[12] & y[16]
    t[10] = y[6] & y[7]
    t[11] = y[2] & y[3]
    t[12] = y[4] & y[5]
    t[13] = y[11] & y[15]
    t[14] = y[1] & y[0]
    t[15] = y[10] & y[14]
    t[16] = t[7] ^ t[9]
    t[17] = t[7] ^ t[8]
    t[18] = t[11] ^ t[12]
    t[19] = t[10] ^ t[12]
    t[20] = t[13] ^ t[15]
    t[21] = t[13] ^ t[14]
    t[22] = t[16] ^ t[18]
    t[23] = t[17] ^ t[19]
    t[24] = t[18] ^ t[20]
    t[25] = t[19] ^ t[21]
    t[26] = t[22] ^ y[18]
    t[27] = t[23] ^ y[20]
    t[28] = t[24] ^ y[21]
    t[29] = t[25] ^ y[19]
    t[30] = t[26] ^ t[27]
    t[31] = t[30] & t[29]
    t[32] = t[31] & t[26]
    t[33] = t[32] ^ 1
    t[34] = t[28] ^ t[33]
    t[35] = t[34] ^ 1
    t[36] = t[30] & t[35]
    t[37] = t[36] ^ 1
    t[38] = t[29] ^ t[37]
    t[39] = t[26] & t[38]
    t[40] = t[39] ^ 1
    t[41] = t[30] ^ t[40]
    t[42] = t[38] ^ 1
    t[43] = t[41] ^ 1
    t[44] = t[42] & t[43]
    t[45] = t[26] ^ t[44]
    t[46] = t[35] & t[45]
    t[47] = t[46] ^ 1
    t[48] = t[38] ^ t[47]
    t[49] = t[41] ^ 1
    t[50] = t[48] & t[49]
    t[51] = t[50] ^ 1
    t[52] = t[35] ^ t[51]
    t[53] = t[52] ^ 1
    t[54] = y[12] ^ y[13]
    t[55] = y[11] ^ y[13]
    t[56] = y[10] ^ y[12]
    t[57] = t[55] ^ t[56]
    t[58] = y[10] ^ y[11]
    t[59] = t[48] ^ t[53]
    t[60] = t[48] ^ t[49]
    t[61] = t[45] ^ t[53]
    t[62] = t[60] ^ t[61]
    t[63] = t[45] ^ t[49]
    t[64] = y[16] ^ y[17]
    t[65] = y[15] ^ y[17]
    t[66] = y[14] ^ y[16]
    t[67] = t[65] ^ t[66]
    t[68] = y[14] ^ y[15]
    z[0] = y[14] & t[45]
    z[1] = t[63] & t[68]
    z[2] = y[15] & t[49]
    z[3] = t[61] & t[66]
    z[4] = t[62] & t[67]
    z[5] = t[60] & t[65]
    z[6] = y[16] & t[53]
    z[7] = t[59] & t[64]
    z[8] = y[17] & t[48]
    z[9] = y[10] & t[45]
    z[10] = t[58] & t[63]
    z[11] = y[11] & t[49]
    z[12] = t[56] & t[61]
    z[13] = t[57] & t[62]
    z[14] = t[55] & t[60]
    z[15] = y[12] & t[53]
    z[16] = t[54] & t[59]
    z[17] = y[13] & t[48]

    #B矩阵
    t[69] = z[11] ^ z[16]
    t[70] = t[69] ^ z[14]
    t[71] = t[70] ^ z[9]
    t[72] = t[71] ^ z[4]
    t[73] = t[72] ^ z[17]
    t[74] = t[73] ^ z[3]
    t[75] = t[74] ^ z[6]
    t[76] = t[75] ^ z[8]
    t[77] = t[72] ^ z[15]
    t[78] = t[77] ^ z[12]
    t[79] = t[78] ^ z[5]
    t[80] = t[79] ^ z[0]
    t[81] = t[76] ^ t[73]
    t[82] = t[76] ^ z[13]
    s[6] = t[82] ^ 1
    t[83] = t[76] ^ z[10]
    t[84] = t[80] ^ z[8]
    t[85] = t[84] ^ z[7]
    t[86] = t[85] ^ z[2]
    s[0] = t[86] ^ 1
    s[1] = t[80] ^ z[1]
    t[87] = t[75] ^ z[15]
    t[88] = t[87] ^ z[7]
    t[89] = t[88] ^ z[2]
    t[90] = t[89] ^ z[1]
    t[91] = t[90] ^ z[16]
    s[7] = t[91] ^ z[14]
    t[92] = t[83] ^ z[14]
    t[93] = t[92] ^ z[13]
    t[94] = t[93] ^ z[12]
    t[95] = t[94] ^ z[2]
    t[96] = t[95] ^ z[0]
    t[97] = t[96] ^ z[11]
    t[98] = t[97] ^ z[8]
    s[5] = t[98] ^ z[6]
    t[99] = t[92] ^ z[9]
    s[4] = t[99] ^ 1
    t[100] = t[90] ^ t[86]
    t[101] = t[100] ^ z[17]
    t[102] = t[73] ^ z[13]
    s[3] = t[101] ^ z[12]
    t[103] = t[102] ^ z[4]
    s[2] = t[103] ^ 1

    result = str(s[7]) + str(s[6]) + str(s[5]) + str(s[4]) + str(s[3]) + str(s[2]) + str(s[1]) + str(s[0])
    output = "".join(list(map(str, result)))
    print(hex(int(output, 2))[2:].rjust(2, '0'), end=" ")
    if i % 16 == 15:
        print()